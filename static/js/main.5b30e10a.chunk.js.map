{"version":3,"sources":["components/ContactList/ContactListItem.module.css","components/ContactList/ContactList.module.css","App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onFormSubmit","reset","className","s","form","onSubmit","this","label","type","pattern","title","required","input","onChange","button","Component","Filter","filter","filterInput","ContactListItem","onContactDelete","item","onClick","ContactList","contacts","contactList","map","id","shortid","require","App","addContact","find","contact","toLowerCase","alert","newContact","generate","deleteContact","contactId","prevState","changeFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","normalizedFilter","visibleContacts","includes","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b30e10a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__3F_42\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3Shq1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2wZAA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3Sczp\",\"label\":\"ContactForm_label__3XwUn\",\"input\":\"ContactForm_input__UAMwR\",\"button\":\"ContactForm_button__pu5p2\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onFormSubmit: PropTypes.func,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onFormSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            className={s.input}\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            className={s.input}\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filter}>\n    Find contacts by name\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      className={s.filterInput}\n    ></input>\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ name, number, onContactDelete }) => {\n  return (\n    <div className={s.item}>\n      {name}: {number}\n      <button type=\"button\" onClick={onContactDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onContactDelete: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import ContactListItem from './ContactListItem';\nimport PropTypes, { arrayOf } from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onContactDelete }) => {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            <ContactListItem\n              name={name}\n              number={number}\n              onContactDelete={() => onContactDelete(id)}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  ),\n  onContactDelete: PropTypes.func,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport s from './App.module.css';\n\nconst shortid = require('shortid');\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    if (\n      this.state.contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} already in contacts`);\n      return;\n    }\n\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onFormSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onContactDelete={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1M3a8\",\"filterInput\":\"Filter_filterInput__2x1mj\"};"],"sourceRoot":""}